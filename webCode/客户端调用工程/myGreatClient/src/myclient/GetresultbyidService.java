package myclient;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * <p>
 * An example of how this class may be used:
 * 
 * <pre>
 * getresultbyidService service = new getresultbyidService();
 * GetresultbyidDelegate portType = service.getGetresultbyidPort();
 * portType.getResult(...);
 * </pre>
 * 
 * </p>
 * 
 */
@WebServiceClient(name = "getresultbyidService", targetNamespace = "http://service/", wsdlLocation = "file:/D:/Workspaces/MyEclipse%20Professional/myGreatWeb/WebRoot/WEB-INF/wsdl/getresultbyidService.wsdl")
public class GetresultbyidService extends Service {

	private final static URL GETRESULTBYIDSERVICE_WSDL_LOCATION;
	private final static Logger logger = Logger
			.getLogger(myclient.GetresultbyidService.class.getName());

	static {
		URL url = null;
		try {
			URL baseUrl;
			baseUrl = myclient.GetresultbyidService.class.getResource(".");
			url = new URL(
					baseUrl,
					"file:/D:/Workspaces/MyEclipse%20Professional/myGreatWeb/WebRoot/WEB-INF/wsdl/getresultbyidService.wsdl");
		} catch (MalformedURLException e) {
			logger.warning("Failed to create URL for the wsdl Location: 'file:/D:/Workspaces/MyEclipse%20Professional/myGreatWeb/WebRoot/WEB-INF/wsdl/getresultbyidService.wsdl', retrying as a local file");
			logger.warning(e.getMessage());
		}
		GETRESULTBYIDSERVICE_WSDL_LOCATION = url;
	}

	public GetresultbyidService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public GetresultbyidService() {
		super(GETRESULTBYIDSERVICE_WSDL_LOCATION, new QName("http://service/",
				"getresultbyidService"));
	}

	/**
	 * 
	 * @return returns GetresultbyidDelegate
	 */
	@WebEndpoint(name = "getresultbyidPort")
	public GetresultbyidDelegate getGetresultbyidPort() {
		return super.getPort(new QName("http://service/", "getresultbyidPort"),
				GetresultbyidDelegate.class);
	}

}
